"use strict";(self["webpackChunklive_chat"]=self["webpackChunklive_chat"]||[]).push([[83],{7083:function(e,t,a){a.r(t),a.d(t,{default:function(){return n}});var l=a(1734),s=Object.assign(Object.create(null),{...l.ZP}),n={yup:s}},1734:function(e,t,a){t.ZP=void 0;var l=s(a(1250));function s(e){return e&&e.__esModule?e:{default:e}}let n={default:"${path} is invalid",required:"${path} is a required field",oneOf:"${path} must be one of the following values: ${values}",notOneOf:"${path} must not be one of the following values: ${values}",notType:({path:e,type:t,value:a,originalValue:s})=>{let n=null!=s&&s!==a,u=`${e} must be a \`${t}\` type, but the final value was: \`${(0,l.default)(a,!0)}\``+(n?` (cast from the value \`${(0,l.default)(s,!0)}\`).`:".");return null===a&&(u+='\n If "null" is intended as an empty value be sure to mark the schema as `.nullable()`'),u},defined:"${path} must be defined"};let u={length:"${path} must be exactly ${length} characters",min:"${path} must be at least ${min} characters",max:"${path} must be at most ${max} characters",matches:'${path} must match the following: "${regex}"',email:"${path} must be a valid email",url:"${path} must be a valid URL",uuid:"${path} must be a valid UUID",trim:"${path} must be a trimmed string",lowercase:"${path} must be a lowercase string",uppercase:"${path} must be a upper case string"};let i={min:"${path} must be greater than or equal to ${min}",max:"${path} must be less than or equal to ${max}",lessThan:"${path} must be less than ${less}",moreThan:"${path} must be greater than ${more}",positive:"${path} must be a positive number",negative:"${path} must be a negative number",integer:"${path} must be an integer"};let h={min:"${path} field must be later than ${min}",max:"${path} field must be at earlier than ${max}"};let m={isValue:"${path} field must be ${value}"};let r={noUnknown:"${path} field has unspecified keys: ${unknown}"};let $={min:"${path} field must have at least ${min} items",max:"${path} field must have less than or equal to ${max} items",length:"${path} must have ${length} items"};var p=Object.assign(Object.create(null),{mixed:n,string:u,number:i,date:h,object:r,array:$,boolean:m});t.ZP=p}}]);